<?xml version="1.0"?>

<!--

-->

<project default="compile" basedir=".">


    <property name="name" value="biomart-java" />
    <property name="version" value="0.8" />
    <property name="build.name" value="${name}-${version}" />
    <property name="build.compiler" value="modern" />
    <property name="build.deprecation" value="false" />

    <!-- Save the current system classpath to pass to forked VMs -->
    <property name="env.classpath" value="${java.class.path}" />
    <property name="readme" value="README" />
    <property name="license" value="LICENSE" />
    <property name="buildfile" value="build.xml" />
	<property name="spy.properties" value="spy.properties" />
    <property name="jre.dir" value="./jre" />
    <property name="src.dir" value="./src/java" />
    <property name="conf.dir" value="./conf" />
	<property name="images.dir" value="./images" />
	<property name="scripts.dir" value="./scripts" />
    <property name="manifest.file" value="${conf.dir}/defaultmanifest.txt" />
    <property name="packages" value="org.*" />
    <property name="bin.dir" value="./bin" />
    <property name="lib.dir" value="./lib" />
    <property name="build.dir" value="./build" />
    <property name="build.classes" value="${build.dir}/classes" />
    <property name="dist.root" value="./dist" />
    <property name="dist.dir" value="${dist.root}/${build.name}"    />



    <!-- classpath set to include jars -->
    <fileset id="lib.classpath" dir="${lib.dir}" >
        <include name="activation.jar" />
        <include name="dsn.jar" />
        <include name="imap.jar" />
        <include name="mailapi.jar" />
        <include name="pop3.jar" />
        <include name="smtp.jar" />
        <include name="ecp1_0beta.jar" />
        <include name="ensj.jar" />
        <include name="ensj-util.jar" />
        <include name="java-getopt-1.0.9.jar" />
        <include name="jdbc2_0-stdext.jar" />
        <include name="jython.jar" />
        <include name="libreadline-java.jar" />
        <include name="postgresql-8.3-604.jdbc3.jar"/>
        <include name="optional.jar" />
        <include name="xalan.jar" />
        <include name="p6spy.jar" />
        <include name="ojdbc14.jar" />
        <include name="jline.jar" />
        <include name="log4j-1.2.15.jar" />
    	<include name="idw-gpl.jar"/>
    	<include name="mysql-connector-java-5.1.7-bin.jar"/>
    	<include name="servlet-api.jar"/>
    	<include name="jdom-1.0.jar"/>
    	<include name="xercesImpl-2.8.1.jar"/>

    	<!-- json -->
    	<include name="json-lib-2.3-jdk15.jar"/>
    	<include name="commons-collections.jar"/>
    	<include name="commons-logging-1.1.1.jar"/>
    	<include name="commons-beanutils-1.7.jar"/>
    	<include name="commons-lang.jar"/>
    	<include name="ezmorph.jar"/>    	
    </fileset>

    <!-- binary distribution jars -->
    <patternset id="dist.bin.jars" >
        <include name= "*.jar" />  
    </patternset>

    <!-- readline platform dependant libraries -->
    <patternset id="readline.libs" >
        <include name="alpha/**" />
        <include name="linux/**" />
        <include name="macosx/**" />
    </patternset>

    <!-- binary distribution conf files -->
    <patternset id="dist.bin.conf" >
        <include name="**" />
    </patternset>

    <!-- Prepend library files to front of classpath -->
    <property name="build.classpath" value="last"/>

    <target name="init">
        <tstamp >
            <format property="TODAY_CA" pattern="yyyy-MM-d-HH-mm" locale="en"/>
            <format property="TODAY_CA_LONG" pattern="d MMM yyyy H:mm a" locale="en"/>
            <format property="TODAY_TIME" pattern="HH-mm" locale="en"/>
        </tstamp>
    </target>



    <target name="all" depends="clean, jar, dist-all"
        description="Cleans, compiles and creates distribution files.">

    </target>

    <!-- Creates directories for build and dist. -->
    <target name="prepare">
        <mkdir dir="${build.dir}" />
        <mkdir dir="${build.classes}" />
        <mkdir dir="${dist.root}" />
        <mkdir dir="${dist.dir}" />    
    </target>



    <target name="clean" 
        description="Removes generated directories and files."
        >
        <delete dir="${build.dir}" />
        <delete dir="${dist.root}" />

    </target>

    <!-- Compiles the source directory -->
    <target name="compile" depends="prepare"
        description="Compiles java files."
        >

        <javac
            srcdir="${src.dir}"
            destdir="${build.classes}"
            deprecation="${build.deprecation}"
            depend="no"
            debug="true"
            source="1.5"
            >
            <classpath>
                <fileset refid="lib.classpath"/>
            </classpath>
        </javac>

        <copy
        todir="${build.classes}/org/biomart/common/resources">
        	<fileset dir="${src.dir}/org/biomart/common/resources/" casesensitive="yes">
        	  <exclude name="**/*.java"/>
        	</fileset>
        </copy>
    	<copy
        todir="${build.classes}/org/biomart/builder/resources">
        	<fileset dir="${src.dir}/org/biomart/builder/resources/" casesensitive="yes">
        	  <exclude name="**/*.java"/>
        	</fileset>
        </copy>

        <copy
        todir="${build.classes}/org/biomart/runner/resources">
        	<fileset dir="${src.dir}/org/biomart/runner/resources/" casesensitive="yes">
        	  <exclude name="**/*.java"/>
        	</fileset>
        </copy>
        <copy
        todir="${bin.dir}">
        	<fileset dir="${scripts.dir}" casesensitive="yes">        	
        	</fileset>
        </copy>

    </target>

	<target name="jar" depends="compile"
        description="Creates martj.jar in 'build' directory."
        >

        <jar
            jarfile="${build.dir}/${name}.jar"
            basedir="${build.classes}"
            includes="*/**">
            <fileset dir=".">
                <exclude name="*~" />
                <exclude name="**/CVS/**" />
                <exclude name="**/*Test*" />
            </fileset>
        </jar>
            
    </target>


    <!-- Runs tests if the Ant optional JUnit support is available -->
    <target name="test" depends="init, compile"
        description="Runs regression tests and produces html output."
        >

        <junit printsummary="yes" haltonfailure="no" dir="${reports.tests}">
            <formatter type="xml" />

            <classpath>
                <pathelement path=".:${build.classes}" />
                <fileset refid="lib.classpath" />
            </classpath>

            <!-- The junit task doesn't support 'if' so we test for JUnit here -->
            <batchtest fork="yes" todir="${reports.tests}">
                <fileset dir="${build.classes}">
                    <include name="**/*Test*" />
                </fileset>
            </batchtest>
        </junit>

        <junitreport todir="${reports.tests}">
            <fileset dir="${reports.tests}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${reports.tests}/html"/>
        </junitreport>

    </target>

    <target name="dist-clean"
        description="Removes directories and files from the distribution directory before a new dist target build."
        >

        <delete dir="${dist.dir}" />

    </target>

    <!-- cleans, creates, and fills dist directory tree -->
    <target name="prepare-dist" depends="dist-clean">
      
        <mkdir dir="${dist.dir}" />

        <copy todir="${dist.dir}/lib" >
            <fileset refid="lib.classpath"/>
        </copy>

        <copy todir="${dist.dir}/lib/" >
            <fileset dir="${lib.dir}">
                <patternset refid="readline.libs" />
            </fileset> 
        </copy>
   
        <copy todir="${dist.dir}/conf">
            <fileset dir="${conf.dir}">
                <include name="**/*"/>
                <exclude name="**/*test_connection*"/>
                <exclude name="**/CVS/**"/>
            </fileset>
        </copy>

        <copy todir="${dist.dir}/${src.dir}">
            <fileset  dir="${src.dir}" >
                <exclude name="**/*.dfPackage"/>
                <exclude name="**/?akefile"/>
                <exclude name="**/*.tpr"/>
                <exclude name="**/*.tws"/>
                <exclude name="**/TAGS"/>
                <exclude name="**/CVS/**"/>
            </fileset>

        </copy>

    </target>

    <!-- creates all distribution sets -->
    <target name="dist-all" depends="dist-bin, dist-src" 
    description="Build all file sets for distribution." />

	<target name="dist" description="Create the dist without extra jar for mac" depends="jar,prepare-dist">
        <copy file="${build.dir}/${name}.jar" todir="${dist.dir}/lib" />

        <!-- copy the bat and shell martshell startup scripts -->
        <copy todir="${dist.dir}/bin">
			<fileset dir="${bin.dir}" casesensitive="yes">
		  		<include name="*.sh"/>
			  	<include name="*.bat"/>
				<include name="conf/*.xml"/>
				<include name="images/*.*"/>
    			<exclude name="**/CVS" />
			</fileset>
        </copy>
		            
        <tar destfile="${build.dir}/${name}-bin.tar">
            <!-- distribution files -->
            <tarfileset dir="${dist.dir}"
                prefix="${build.name}"
                preserveLeadingSlashes="true">
                <patternset refid="dist.files"/>
            </tarfileset>

            <!-- bin/*.sh with correct unix file mode -->
            <tarfileset dir="${dist.dir}"
                prefix="${build.name}"
                mode="755"
                preserveLeadingSlashes="true">
                <include name="**/bin/*.sh"/>
            	<include name="**/conf/*.xml"/>
            	<include name="**/images/*"/>
            </tarfileset>

            <!-- bin/martshell.bat -->
            <tarfileset dir="${dist.dir}"
                prefix="${build.name}"
                preserveLeadingSlashes="true">
                <include name="**/bin/*.bat"/>
            </tarfileset>
        
            <!-- dist.bin.jars -->    
            <tarfileset dir="${dist.dir}/${lib.dir}"
                prefix="${build.name}/lib"
                preserveLeadingSlashes="true">
                <patternset refid="dist.bin.jars"/>
            </tarfileset>

            <!-- readline.libs -->
            <tarfileset dir="${dist.dir}/${lib.dir}"
                prefix="${build.name}/lib"
                preserveLeadingSlashes="true">
                <patternset refid="readline.libs"/>
            </tarfileset>

            <!-- dist.bin.conf -->
            <tarfileset dir="${dist.dir}/${conf.dir}"
                prefix="${build.name}/conf"
                preserveLeadingSlashes="true">
                <patternset refid="dist.bin.conf"/>
            </tarfileset>
         
        </tar>
        <gzip zipfile="${build.dir}/${name}-bin.tgz" src="${build.dir}/${name}-bin.tar" />
        <delete file="${build.dir}/${name}-bin.tar"/>

        <zip destfile="${build.dir}/${name}-bin.zip" >
            <!-- distribution files -->
            <zipfileset dir="${dist.dir}" prefix="${build.name}">
                <patternset refid="dist.files"/>
            </zipfileset>

            <!-- bin/martshell.bat -->
            <zipfileset dir="${dist.dir}"
                prefix="${build.name}">
                <include name="**/bin/*.bat"/>
            	<include name="**/conf/*.xml"/>
            	<include name="**/images/*"/>
            </zipfileset>
        
            <!-- dist.bin.jars -->    
            <zipfileset dir="${dist.dir}/${lib.dir}"
                prefix="${build.name}/lib">
                <patternset refid="dist.bin.jars"/>
            </zipfileset>

            <!-- readline.libs -->
            <zipfileset dir="${dist.dir}/${lib.dir}"
                prefix="${build.name}/lib">
                <patternset refid="readline.libs"/>
            </zipfileset>

            <!-- dist.bin.conf -->
            <zipfileset dir="${dist.dir}/${conf.dir}"
                prefix="${build.name}/conf">
                <patternset refid="dist.bin.conf"/>
            </zipfileset>

        </zip>
	</target>
    <!-- creates the dist-bin distribution set -->
    <target name="dist-bin" 
        description="Creates the dist-bin distribution set"
        depends="jar, prepare-dist">

        <copy file="${build.dir}/${name}.jar" todir="${dist.dir}/lib" />

        <!-- copy the bat and shell martshell startup scripts -->
        <copy todir="${dist.dir}/bin">
			<fileset dir="${bin.dir}" casesensitive="yes">
		  		<include name="*.sh"/>
			  	<include name="*.bat"/>
				<include name="conf/*.xml"/>
				<include name="images/*.*"/>
    			<exclude name="**/CVS" />
			</fileset>
        </copy>

		<condition property="isMacOS">
	    <os family="mac"/>
	 	</condition>
	 	<antcall target="doMacOS"/>
		            
        <tar destfile="${build.dir}/${name}-bin.tar">
            <!-- distribution files -->
            <tarfileset dir="${dist.dir}"
                prefix="${build.name}"
                preserveLeadingSlashes="true">
            </tarfileset>

            <!-- bin/*.sh with correct unix file mode -->
            <tarfileset dir="${dist.dir}"
                prefix="${build.name}"
                mode="755"
                preserveLeadingSlashes="true">
                <include name="**/bin/*.sh"/>
            	<include name="**/conf/*.xml"/>
            	<include name="**/images/*"/>
            </tarfileset>

            <!-- bin/martshell.bat -->
            <tarfileset dir="${dist.dir}"
                prefix="${build.name}"
                preserveLeadingSlashes="true">
                <include name="**/bin/*.bat"/>
            </tarfileset>
        
            <!-- dist.bin.jars -->    
            <tarfileset dir="${dist.dir}/${lib.dir}"
                prefix="${build.name}/lib"
                preserveLeadingSlashes="true">
                <patternset refid="dist.bin.jars"/>
            </tarfileset>

            <!-- readline.libs -->
            <tarfileset dir="${dist.dir}/${lib.dir}"
                prefix="${build.name}/lib"
                preserveLeadingSlashes="true">
                <patternset refid="readline.libs"/>
            </tarfileset>

            <!-- dist.bin.conf -->
            <tarfileset dir="${dist.dir}/${conf.dir}"
                prefix="${build.name}/conf"
                preserveLeadingSlashes="true">
                <patternset refid="dist.bin.conf"/>
            </tarfileset>
         
        </tar>
        <gzip zipfile="${build.dir}/${name}-bin.tgz" src="${build.dir}/${name}-bin.tar" />
        <delete file="${build.dir}/${name}-bin.tar"/>

        <zip destfile="${build.dir}/${name}-bin.zip" >
            <!-- distribution files -->
            <zipfileset dir="${dist.dir}" prefix="${build.name}">
            </zipfileset>

            <!-- bin/martshell.bat -->
            <zipfileset dir="${dist.dir}"
                prefix="${build.name}">
                <include name="**/bin/*.bat"/>
            	<include name="**/conf/*.xml"/>
            	<include name="**/images/*"/>
            </zipfileset>
        
            <!-- dist.bin.jars -->    
            <zipfileset dir="${dist.dir}/${lib.dir}"
                prefix="${build.name}/lib">
                <patternset refid="dist.bin.jars"/>
            </zipfileset>

            <!-- readline.libs -->
            <zipfileset dir="${dist.dir}/${lib.dir}"
                prefix="${build.name}/lib">
                <patternset refid="readline.libs"/>
            </zipfileset>

            <!-- dist.bin.conf -->
            <zipfileset dir="${dist.dir}/${conf.dir}"
                prefix="${build.name}/conf">
                <patternset refid="dist.bin.conf"/>
            </zipfileset>

        </zip>
    </target>
    
		<!-- creates the BioMartLauncher.app -->
   		<target name="doMacOS" if="isMacOS">
		<taskdef name="jarbundler" 
      	   classname="net.sourceforge.jarbundler.JarBundler"/>	    
        <mkdir dir="${dist.dir}/dmg" />
        <mkdir dir="${dist.dir}/dmg/bin"/>
   			 <copy todir="${dist.dir}/dmg/bin">
   						<fileset dir="${bin.dir}" casesensitive="yes">
   					  		<include name="**/conf/*.xml"/>
   							<include name="**/images/*"/>
   			    			<exclude name="**/CVS" />
   						</fileset>
   			        </copy>

                <taskdef name="jarbundler"
           classname="net.sourceforge.jarbundler.JarBundler"/>
       <jarbundler dir="${dist.dir}/dmg/bin"
            name="MartConfigurator"
            mainclass="org.biomart.configurator.test.MartConfigurator">
            <jarfileset dir="${dist.dir}/${lib.dir}">
                        <include name="**/*.jar" />
                        <exclude name="**/CVS" />
                        </jarfileset>
                        <javaproperty name="apple.laf.useScreenMenuBar" value="true"/>
        </jarbundler>
            <!-- bin/*.sh with correct unix file mode -->
<!--        <copy todir="${dist.dir}/dmg/bin">
			<fileset dir="${bin.dir}" casesensitive="yes">
		  		<include name="martshell.sh"/>
    			<exclude name="**/CVS" />
			</fileset>
        </copy>
        -->
<!--        <rename src="${dist.dir}/dmg/bin/martshell.sh" dest="${dist.dir}/dmg/bin/martshell.command"/>
        <chmod perm="755" file="${dist.dir}/dmg/bin/martshell.command"/>
    -->    
            <mkdir dir="${dist.dir}/dmg/lib"/>
        <copy todir="${dist.dir}/dmg/lib">
			<fileset dir="${dist.dir}/${lib.dir}" casesensitive="yes">
                <patternset refid="dist.bin.jars"/>
			</fileset>
        </copy>
        <copy todir="${dist.dir}/dmg/lib">
			<fileset dir="${dist.dir}/${lib.dir}" casesensitive="yes">
                <patternset refid="readline.libs"/>
			</fileset>
        </copy>
            <mkdir dir="${dist.dir}/dmg/conf"/>
        <copy todir="${dist.dir}/dmg/conf">
			<fileset dir="${dist.dir}/${conf.dir}" casesensitive="yes">
                <patternset refid="dist.bin.conf"/>
			</fileset>
        </copy>        
        <delete file="${build.dir}/${name}-bin.dmg" />
    <exec executable="/usr/bin/hdiutil">
      <arg value="create"/>
      <arg value="-srcfolder"/>
      <arg value="${dist.dir}/dmg"/>
      <arg value="-volname"/>
      <arg value="${name} ${version}"/>
      <arg value="-ov"/>
      <arg value="${build.dir}/${name}-bin.dmg"/>
    </exec>
    <exec executable="/usr/bin/hdiutil">
      <arg value="internet-enable"/>
      <arg value="-yes"/>
      <arg value="${build.dir}/${name}-bin.dmg"/>
    </exec>
		</target>

    <!-- copies all JRE versions of the shell and bat scripts, renaming to make it easier to find -->
    <target name="prepare-jre-dist" description="copies JRE versions of shell and bat scripts as normal versions" >
        <copy file="${bin.dir}/martconfigurator.sh" tofile="${dist.dir}/bin/martconfigurator.sh" />
        <copy file="${bin.dir}/martconfigurator.bat" tofile="${dist.dir}/bin/martconfigurator.bat" />
    </target>

    <!-- creates the dist-bin distribution set with linux jre  -->
    <target name="dist-bin-jre-linux" 
        description="Creates the dist-bin distribution set, with bundled jre for linux"
        depends="jar, prepare-dist, prepare-jre-dist">

        <copy file="${build.dir}/${name}.jar" todir="${dist.dir}/lib" />

        <!-- delete the .bat files -->
        <delete>
            <fileset dir="${dist.dir}/bin" includes="**/*bat" />         
        </delete>

        <tar destfile="${build.dir}/${name}-bin-jre-linux.tar">
            <!-- distribution files -->
            <tarfileset dir="${dist.dir}"
                prefix="${build.name}"
                preserveLeadingSlashes="true">
                <patternset refid="dist.files"/>
            </tarfileset>
        
            <!-- linux jre -->
            <tarfileset dir="${jre.dir}"
                prefix="${build.name}/jre"
                mode="755"
                preserveLeadingSlashes="true">
                <include name="**/linux/**/*"/>
            </tarfileset>
                    
            <!-- bin/*.sh with correct unix file mode -->
            <tarfileset dir="${dist.dir}"
                prefix="${build.name}"
                mode="755"
                preserveLeadingSlashes="true">
                <include name="**/bin/*.sh"/>
            </tarfileset>

            <!-- dist.bin.jars -->    
            <tarfileset dir="${dist.dir}/${lib.dir}"
                prefix="${build.name}/lib"
                preserveLeadingSlashes="true">
                <patternset refid="dist.bin.jars"/>
            </tarfileset>

            <!-- readline.libs -->
            <tarfileset dir="${dist.dir}/${lib.dir}"
                prefix="${build.name}/lib"
                preserveLeadingSlashes="true">
                <patternset refid="readline.libs"/>
            </tarfileset>

            <!-- dist.bin.conf -->
            <tarfileset dir="${dist.dir}/${conf.dir}"
                prefix="${build.name}/conf"
                preserveLeadingSlashes="true">
                <patternset refid="dist.bin.conf"/>
            </tarfileset>
         
        </tar>
        <gzip zipfile="${build.dir}/${name}-bin-jre-linux.tgz" src="${build.dir}/${name}-bin-jre-linux.tar" />
        <delete file="${build.dir}/${name}-bin-jre-linux.tar"/>

        <zip destfile="${build.dir}/${name}-bin-jre-linux.zip" >
            <!-- distribution files -->
            <zipfileset dir="${dist.dir}" prefix="${build.name}">
                <patternset refid="dist.files"/>
            </zipfileset>

            <!-- linux jre -->
            <zipfileset dir="${jre.dir}"  prefix="${build.name}/jre">
                <include name="**/linux/**/*"/>        
            </zipfileset>
        
            <!-- shell files with correct unix file mode -->
            <zipfileset dir="${dist.dir}"  prefix="${build.name}">
                <include name="**/bin/*.sh"/>
            </zipfileset>

            <!-- dist.bin.jars -->    
            <zipfileset dir="${dist.dir}/${lib.dir}"
                prefix="${build.name}/lib">
                <patternset refid="dist.bin.jars"/>
            </zipfileset>

            <!-- readline.libs -->
            <zipfileset dir="${dist.dir}/${lib.dir}"
                prefix="${build.name}/lib">
                <patternset refid="readline.libs"/>
            </zipfileset>

            <!-- dist.bin.conf -->
            <zipfileset dir="${dist.dir}/${conf.dir}"
                prefix="${build.name}/conf">
                <patternset refid="dist.bin.conf"/>
            </zipfileset>

        </zip>
    </target>

    <!-- creates the dist-bin distribution set with windows jre  -->
    <target name="dist-bin-jre-windows" 
        description="Creates the dist-bin distribution set, with bundled jre for windows"
        depends="jar, prepare-dist, prepare-jre-dist">

        <copy file="${build.dir}/${name}.jar" todir="${dist.dir}/lib" />

        <!-- delete the .sh files -->
        <delete>
            <fileset dir="${dist.dir}/bin" includes="**/*sh" />         
        </delete>

        <tar destfile="${build.dir}/${name}-bin-jre-windows.tar">
            <!-- distribution files -->
            <tarfileset dir="${dist.dir}"
                prefix="${build.name}"
                preserveLeadingSlashes="true">
                <patternset refid="dist.files"/>
            </tarfileset>
        
            <!-- windows jre -->
            <tarfileset dir="${jre.dir}"
                prefix="${build.name}/jre"
                mode="755"
                preserveLeadingSlashes="true">
                <include name="**/windows/**/*"/>
            </tarfileset>
                    
            <!-- bin/martshell.bat -->
            <tarfileset dir="${dist.dir}"
                prefix="${build.name}"
                preserveLeadingSlashes="true">
                <include name="**/bin/*.bat"/>
            </tarfileset>
        
            <!-- dist.bin.jars -->    
            <tarfileset dir="${dist.dir}/${lib.dir}"
                prefix="${build.name}/lib"
                preserveLeadingSlashes="true">
                <patternset refid="dist.bin.jars"/>
            </tarfileset>

            <!-- readline.libs -->
            <tarfileset dir="${dist.dir}/${lib.dir}"
                prefix="${build.name}/lib"
                preserveLeadingSlashes="true">
                <patternset refid="readline.libs"/>
            </tarfileset>

            <!-- dist.bin.conf -->
            <tarfileset dir="${dist.dir}/${conf.dir}"
                prefix="${build.name}/conf"
                preserveLeadingSlashes="true">
                <patternset refid="dist.bin.conf"/>
            </tarfileset>
         
        </tar>
        <gzip zipfile="${build.dir}/${name}-bin-jre-windows.tgz" src="${build.dir}/${name}-bin-jre-windows.tar" />
        <delete file="${build.dir}/${name}-bin-jre-windows.tar"/>

        <zip destfile="${build.dir}/${name}-bin-jre-windows.zip" >
            <!-- distribution files -->
            <zipfileset dir="${dist.dir}" prefix="${build.name}">
                <patternset refid="dist.files"/>
            </zipfileset>

            <!-- windows jre -->
            <zipfileset dir="${jre.dir}"  prefix="${build.name}/jre">
                <include name="**/windows/**/*"/>        
            </zipfileset>
        
            <!-- bin/martshell.bat -->
            <zipfileset dir="${dist.dir}"
                prefix="${build.name}">
                <include name="**/bin/*.bat"/>
            </zipfileset>
        
            <!-- dist.bin.jars -->    
            <zipfileset dir="${dist.dir}/${lib.dir}"
                prefix="${build.name}/lib">
                <patternset refid="dist.bin.jars"/>
            </zipfileset>

            <!-- readline.libs -->
            <zipfileset dir="${dist.dir}/${lib.dir}"
                prefix="${build.name}/lib">
                <patternset refid="readline.libs"/>
            </zipfileset>

            <!-- dist.bin.conf -->
            <zipfileset dir="${dist.dir}/${conf.dir}"
                prefix="${build.name}/conf">
                <patternset refid="dist.bin.conf"/>
            </zipfileset>

        </zip>
    </target>

    <!-- creates the dist-bin distribution set with alpha jre  -->
    <target name="dist-bin-jre-alpha" 
        description="Creates the dist-bin distribution set, with bundled jre for alpha"
        depends="jar, prepare-dist, prepare-jre-dist">

        <copy file="${build.dir}/${name}.jar" todir="${dist.dir}/lib" />

        <!-- delete the .bat files -->
        <delete>
            <fileset dir="${dist.dir}/bin" includes="**/*bat" />         
        </delete>

        <tar destfile="${build.dir}/${name}-bin-jre-alpha.tar">
            <!-- distribution files -->
            <tarfileset dir="${dist.dir}"
                prefix="${build.name}"
                preserveLeadingSlashes="true">
                <patternset refid="dist.files"/>
            </tarfileset>
        
            <!-- alpha jre -->
            <tarfileset dir="${jre.dir}"
                prefix="${build.name}/jre"
                mode="755"
                preserveLeadingSlashes="true">
                <include name="**/alpha/**/*"/>
            </tarfileset>
                    
            <!-- bin/*.sh with correct unix file mode -->
            <tarfileset dir="${dist.dir}"
                prefix="${build.name}"
                mode="755"
                preserveLeadingSlashes="true">
                <include name="**/bin/*.sh"/>
            </tarfileset>

            <!-- dist.bin.jars -->    
            <tarfileset dir="${dist.dir}/${lib.dir}"
                prefix="${build.name}/lib"
                preserveLeadingSlashes="true">
                <patternset refid="dist.bin.jars"/>
            </tarfileset>

            <!-- readline.libs -->
            <tarfileset dir="${dist.dir}/${lib.dir}"
                prefix="${build.name}/lib"
                preserveLeadingSlashes="true">
                <patternset refid="readline.libs"/>
            </tarfileset>

            <!-- dist.bin.conf -->
            <tarfileset dir="${dist.dir}/${conf.dir}"
                prefix="${build.name}/conf"
                preserveLeadingSlashes="true">
                <patternset refid="dist.bin.conf"/>
            </tarfileset>
         
        </tar>
        <gzip zipfile="${build.dir}/${name}-bin-jre-alpha.tgz" src="${build.dir}/${name}-bin-jre-alpha.tar" />
        <delete file="${build.dir}/${name}-bin-jre-alpha.tar"/>

        <zip destfile="${build.dir}/${name}-bin-jre-alpha.zip" >
            <!-- distribution files -->
            <zipfileset dir="${dist.dir}" prefix="${build.name}">
                <patternset refid="dist.files"/>
            </zipfileset>

            <!-- alpha jre -->
            <zipfileset dir="${jre.dir}"  prefix="${build.name}/jre">
                <include name="**/alpha/**/*" />        
            </zipfileset>
        
            <!-- shell files with correct unix file mode -->
            <zipfileset dir="${dist.dir}"  prefix="${build.name}">
                <include name="**/bin/*.sh"/>
            </zipfileset>

            <!-- dist.bin.jars -->    
            <zipfileset dir="${dist.dir}/${lib.dir}"
                prefix="${build.name}/lib">
                <patternset refid="dist.bin.jars"/>
            </zipfileset>

            <!-- readline.libs -->
            <zipfileset dir="${dist.dir}/${lib.dir}"
                prefix="${build.name}/lib">
                <patternset refid="readline.libs"/>
            </zipfileset>

            <!-- dist.bin.conf -->
            <zipfileset dir="${dist.dir}/${conf.dir}"
                prefix="${build.name}/conf">
                <patternset refid="dist.bin.conf"/>
            </zipfileset>

        </zip>
    </target>

    <target name="dist-src" depends="prepare-dist">

        <tar destfile="${build.dir}/${name}-src.tar">
            <tarfileset dir="${dist.dir}/src/java"
                prefix="${build.name}/src/java"
                preserveLeadingSlashes="true">
                <include name="**"/>
            </tarfileset>
        </tar>
        <gzip zipfile="${build.dir}/${name}-src.tgz" src="${build.dir}/${name}-src.tar" />
        <delete file="${build.dir}/${name}-src.tar"/>

        <zip destfile="${build.dir}/${name}-src.zip" >
            <zipfileset dir="${dist.dir}/src/java" includes="**/*" prefix="${build.name}/src/java"/>
        </zip>
    </target>


<!--
    <target name="api" depends="prepare" 
        description="Build javadocs.">

        <javadoc 
            sourcepath="${src.dir}"
            packagenames="org.ensembl.mart.lib
            ,org.ensembl.mart.lib.config"
            destdir="${api.dir}"
            author="true"
            version="true"
            use="true"
            windowtitle="MartExplorer API"
            source="1.4"
            doctitle="MartExplorer API" >

            <classpath>
                <pathelement path="${build.classes}" />
                <fileset refid="lib.classpath" />
            </classpath>

        </javadoc>    
-->
        <!-- insert some magic at the top of each javadoc page to prevent
        the ensembl website from processing it and adding page borders. -->
<!--        <replace token="&lt;!DOCTYPE" 
            value="&lt;!- #set var=&quot;decor&quot; value=&quot;none&quot;-&gt;&lt;!DOCTYPE"
            dir="${api.dir}">
            <include name="**/*.html"/>
        </replace>

    </target>
-->


</project>



